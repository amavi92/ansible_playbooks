<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>

<!-- Site specific YARN configuration properties -->
<property>
  <name>yarn.resourcemanager.cluster-id</name>
  <value>nbirmcluster</value>
</property>

<property>
  <name>yarn.webapp.ui2.enable</name>
  <value>true</value>
</property>

<property>
  <name>yarn.resourcemanager.ha.enabled</name>
  <value>true</value>
</property>


<property>
  <name>yarn.resourcemanager.ha.rm-ids</name>
  <value>rm1,rm2</value>
</property>

<property>
  <name>yarn.resourcemanager.hostname.rm1</name>
  <value>{{ hadoop_data_node1 }}</value>
</property>

<property>
  <name>yarn.resourcemanager.hostname.rm2</name>
  <value>{{ hadoop_data_node2 }}</value>
</property>

<property>
  <name>yarn.resourcemanager.recovery.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.resourcemanager.store.class</name>
  <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
</property>

<property>
    <name>yarn.resourcemanager.zk-state-store.parent-path</name>
    <value>{{ hadoop_dir_path }}/rmstore</value>
  </property>

<property>
  <name>yarn.client.failover-proxy-provider</name>
  <value>org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider</value>
</property>

<property>
  <name>yarn.resourcemanager.ha.automatic-failover.enabled</name>
  <value>true</value>
</property>

<property>
  <name>yarn.resourcemanager.ha.automatic-failover.embedded</name>
  <value>true</value>
</property>

<property>
    <description>The address of the RM web application.</description>
    <name>yarn.resourcemanager.webapp.address.rm1</name>
    <value>{{ hadoop_data_node1 }}:18088</value>
  </property>
<property>
   <description>The address of the RM web application.</description>
   <name>yarn.resourcemanager.webapp.address.rm2</name>
   <value>{{ hadoop_data_node2 }}:18088</value>
 </property>

<property>
    <name>yarn.resourcemanager.resource-tracker.address.rm1</name>
    <value>{{ hadoop_data_node1 }}:18031</value>
 </property>

 <property>
    <name>yarn.resourcemanager.resource-tracker.address.rm2</name>
    <value>{{ hadoop_data_node2 }}:18031</value>
 </property>

 <property>
    <description>The address of the scheduler interface.</description>
    <name>yarn.resourcemanager.scheduler.address.rm1</name>
    <value>{{ hadoop_data_node1 }}:18030</value>
 </property>

 <property>
    <description>The address of the scheduler interface.</description>
    <name>yarn.resourcemanager.scheduler.address.rm2</name>
    <value>{{ hadoop_data_node2 }}:18030</value>
  </property>

  <property>
    <description>The address of the applications manager interface in the RM.</description>
    <name>yarn.resourcemanager.address.rm1</name>
    <value>{{ hadoop_data_node1 }}:18032</value>
  </property>

  <property>
    <description>The address of the applications manager interface in the RM.</description>
    <name>yarn.resourcemanager.address.rm2</name>
    <value>{{ hadoop_data_node2 }}:18032</value>
  </property>

 <property>
   <description>The address of the RM web application.</description>
   <name>yarn.resourcemanager.zk-address</name>
   <value>{{ hadoop_name_node1 }}:2181,{{ hadoop_name_node2 }}:2181,{{ hadoop_data_node1 }}:2181</value>
 </property>
 <!--<property>
    <description>Classpath for typical applications.</description>
     <name>yarn.application.classpath</name>
        <value>/home/hadoop/software/spark-3.0.1-bin-hadoop3.2/yarn/spark-3.0.1-yarn-shuffle.jar</value>
  </property>-->
 <property>
  <name>yarn.nodemanager.aux-services</name>
  <value>spark_shuffle</value>
</property>
<property>
  <name>yarn.nodemanager.aux-services.spark_shuffle.class</name>
  <value>org.apache.spark.network.yarn.YarnShuffleService</value>
</property>
<property>
   <name>yarn.nodemanager.resource.memory-mb</name>
   <value>49152</value>
</property>
<property>
   <name>yarn.scheduler.maximum-allocation-mb</name>
   <value>48000</value>
</property>
<property>
   <name>yarn.scheduler.minimum-allocation-mb</name>
   <value>1024</value>
</property>
<property>
   <name>yarn.scheduler.increment-allocation-mb</name>
   <value>1024</value>
</property>
<property>
   <name>yarn.scheduler.minimum-allocation-vcores</name>
   <value>1</value>
</property>
<property>
   <name>yarn.scheduler.maximum-allocation-vcores</name>
   <value>6</value>
</property>
<property>
   <name>yarn.scheduler.increment-allocation-vcores</name>
   <value>1</value>
</property>
<property>
   <name>yarn.nodemanager.vmem-check-enabled</name>
    <value>false</value>
</property>

<property>
   <name>yarn.nodemanager.resource.cpu-vcores</name>
    <value>6</value>
</property>

 <property>
    <name>yarn.resourcemanager.scheduler.class</name>
    <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
    <!-- <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler</value> -->
    <!-- <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value> -->
  </property>

 <property>
    <description>Set to false, to avoid ip check</description>
    <name>hadoop.security.token.service.use_ip</name>
    <value>false</value>
  </property>

  <property>
    <name>yarn.scheduler.capacity.maximum-applications</name>
    <value>10000</value>
    <description>Maximum number of applications in the system which can be concurrently active both running and pending</description>
  </property>

  <property>
    <description>Whether to use preemption. Note that preemption is experimental in the current version. Defaults to false.</description>
    <name>yarn.scheduler.fair.preemption</name>
    <value>false</value>
  </property>

  <property>
    <description>Whether to allow multiple container assignments in one heartbeat. Defaults to false.</description>
    <name>yarn.scheduler.fair.assignmultiple</name>
    <value>true</value>
  </property>

 <property>
    <description>Set to false, to avoid ip check</description>
    <name>yarn.log-aggregation-enable</name>
    <value>true</value>
</property>
<property>
  <description>Address where the localizer IPC is.</description>
  <name>yarn.nodemanager.localizer.address</name>
  <value>{{ inventory_hostname }}:18040</value>
</property>
<property>
<name>yarn.log.server.url</name>
<value>http://{{ inventory_hostname }}:19888/jobhistory/logs</value>
</property>
<property>
<name>yarn.nodemanager.localizer.cache.cleanup.interval-ms</name>
<value>36000000</value>
</property>
</configuration>
